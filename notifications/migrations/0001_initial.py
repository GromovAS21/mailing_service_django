# Generated by Django 5.2.1 on 2025-05-17 07:11

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "message",
                    models.TextField(
                        validators=[
                            django.core.validators.MinLengthValidator(1, "Сообщение не может быть пустым"),
                            django.core.validators.MaxLengthValidator(
                                1024, "Максимальная длина сообщения - 1024 символов"
                            ),
                        ],
                        verbose_name="Текст уведомления",
                    ),
                ),
                (
                    "delay",
                    models.IntegerField(
                        choices=[(0, "Нет задержки"), (1, "Задержка 1 час"), (2, "Задержка 1 день")],
                        verbose_name="Задержка уведомления",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата создания уведомления")),
            ],
        ),
        migrations.CreateModel(
            name="Recipient",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, unique=True, verbose_name="Адрес получателя"
                    ),
                ),
                (
                    "telegram_id",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.MinValueValidator(100000000),
                            django.core.validators.MaxValueValidator(9999999999),
                        ],
                        verbose_name="Telegram ID получателя",
                    ),
                ),
                (
                    "notifications",
                    models.ManyToManyField(
                        blank=True,
                        related_name="recipients",
                        to="notifications.notification",
                        verbose_name="Уведомления получателя",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DeliveryLog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "Успешно"), ("failed", "Ошибка")],
                        max_length=50,
                        verbose_name="Статус доставки",
                    ),
                ),
                ("error_message", models.TextField(blank=True, null=True, verbose_name="Сообщение об ошибке")),
                (
                    "notification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delivery_logs",
                        to="notifications.notification",
                        verbose_name="Уведомление",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notifications.recipient",
                        verbose_name="Получатель",
                    ),
                ),
            ],
        ),
    ]
